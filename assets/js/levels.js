/* Level creation */

// 4 rows or 5
function makeLevel1()
{
    var ret = [];
    ret.push(new Brick(0, 0, 1, false));
    ret.push(new Brick(1, 0, 1, false));
    ret.push(new Brick(2, 0, 1, false));
    ret.push(new Brick(3, 0, 1, false));
    ret.push(new Brick(5, 0, 1, false));
    ret.push(new Brick(6, 0, 1, false));
    ret.push(new Brick(7, 0, 1, false));
    ret.push(new Brick(8, 0, 1, false));
    ret.push(new Brick(10, 0, 1, false));
    ret.push(new Brick(9, 0, 1, false));
    ret.push(new Brick(11, 0, 1, false));
    ret.push(new Brick(13, 0, 1, false));
    ret.push(new Brick(14, 0, 1, false));
    ret.push(new Brick(15, 0, 1, false));
    ret.push(new Brick(19, 1, 2, false));
    ret.push(new Brick(19, 0, 1, false));
    ret.push(new Brick(16, 0, 1, false));
    ret.push(new Brick(12, 0, 1, false));
    ret.push(new Brick(17, 0, 1, false));
    ret.push(new Brick(18, 0, 1, false));
    ret.push(new Brick(17, 1, 2, false));
    ret.push(new Brick(18, 1, 2, false));
    ret.push(new Brick(16, 1, 2, false));
    ret.push(new Brick(15, 1, 2, false));
    ret.push(new Brick(14, 1, 2, false));
    ret.push(new Brick(13, 1, 2, false));
    ret.push(new Brick(12, 1, 2, false));
    ret.push(new Brick(10, 1, 2, false));
    ret.push(new Brick(7, 2, 3, false));
    ret.push(new Brick(2, 1, 2, false));
    ret.push(new Brick(1, 1, 2, false));
    ret.push(new Brick(0, 1, 2, false));
    ret.push(new Brick(4, 2, 3, false));
    ret.push(new Brick(17, 2, 3, false));
    ret.push(new Brick(18, 2, 3, false));
    ret.push(new Brick(20, 3, 1, false));
    ret.push(new Brick(19, 2, 3, false));
    ret.push(new Brick(16, 2, 3, false));
    ret.push(new Brick(15, 2, 3, false));
    ret.push(new Brick(14, 2, 3, false));
    ret.push(new Brick(13, 2, 3, false));
    ret.push(new Brick(12, 2, 3, false));
    ret.push(new Brick(10, 2, 3, false));
    ret.push(new Brick(11, 2, 3, false));
    ret.push(new Brick(11, 1, 2, false));
    ret.push(new Brick(9, 2, 3, false));
    ret.push(new Brick(8, 2, 3, false));
    ret.push(new Brick(7, 1, 2, false));
    ret.push(new Brick(9, 1, 2, false));
    ret.push(new Brick(8, 1, 2, false));
    ret.push(new Brick(5, 1, 2, false));
    ret.push(new Brick(5, 2, 3, false));
    ret.push(new Brick(0, 2, 3, false));
    ret.push(new Brick(2, 2, 3, false));
    ret.push(new Brick(1, 2, 3, false));
    ret.push(new Brick(3, 1, 2, false));
    ret.push(new Brick(3, 2, 3, false));
    ret.push(new Brick(4, 1, 2, false));
    ret.push(new Brick(4, 0, 1, false));
    ret.push(new Brick(6, 2, 3, false));
    ret.push(new Brick(6, 1, 2, false));
    ret.push(new Brick(0, 7, 0, true));
    ret.push(new Brick(1, 7, 0, true));
    ret.push(new Brick(2, 7, 0, true));
    ret.push(new Brick(3, 6, 0, true));
    ret.push(new Brick(19, 7, 0, true));
    ret.push(new Brick(18, 7, 0, true));
    ret.push(new Brick(17, 7, 0, true));
    ret.push(new Brick(16, 6, 0, true));
    ret.push(new Brick(4, 6, 3, false));
    ret.push(new Brick(5, 7, 3, false));
    ret.push(new Brick(10, 7, 0, true));
    ret.push(new Brick(12, 7, 3, false));
    ret.push(new Brick(11, 7, 3, false));
    ret.push(new Brick(13, 7, 0, true));
    ret.push(new Brick(9, 7, 0, true));
    ret.push(new Brick(7, 7, 3, false));
    ret.push(new Brick(6, 7, 0, true));
    ret.push(new Brick(8, 7, 3, false));
    ret.push(new Brick(14, 7, 3, false));
    ret.push(new Brick(15, 6, 3, false));
    ret.push(new Brick(0, 3, 1, false));
    ret.push(new Brick(1, 3, 1, false));
    ret.push(new Brick(2, 3, 1, false));
    ret.push(new Brick(3, 3, 1, false));
    ret.push(new Brick(4, 3, 1, false));
    ret.push(new Brick(5, 3, 1, false));
    ret.push(new Brick(7, 3, 1, false));
    ret.push(new Brick(6, 3, 1, false));
    ret.push(new Brick(8, 3, 1, false));
    ret.push(new Brick(9, 3, 1, false));
    ret.push(new Brick(10, 3, 1, false));
    ret.push(new Brick(11, 3, 1, false));
    ret.push(new Brick(12, 3, 1, false));
    ret.push(new Brick(13, 3, 1, false));
    ret.push(new Brick(14, 3, 1, false));
    ret.push(new Brick(16, 3, 1, false));
    ret.push(new Brick(17, 3, 1, false));
    ret.push(new Brick(19, 3, 1, false));
    ret.push(new Brick(18, 3, 1, false));
    ret.push(new Brick(15, 3, 1, false));
    ret.push(new Brick(9, 5, 0, true));
    ret.push(new Brick(10, 5, 0, true));

    return ret;
}

// Weird smiley
function makeLevel2()
{
    var ret = [];
    ret.push(new Brick(9, 11, 0, true));
    ret.push(new Brick(10, 11, 0, true));
    ret.push(new Brick(8, 11, 0, true));
    ret.push(new Brick(7, 11, 0, true));
    ret.push(new Brick(11, 11, 0, true));
    ret.push(new Brick(12, 11, 0, true));
    ret.push(new Brick(6, 10, 2, false));
    ret.push(new Brick(13, 10, 2, false));
    ret.push(new Brick(4, 10, 1, false));
    ret.push(new Brick(14, 10, 2, false));
    ret.push(new Brick(15, 10, 1, false));
    ret.push(new Brick(9, 10, 1, false));
    ret.push(new Brick(9, 9, 1, false));
    ret.push(new Brick(10, 10, 1, false));
    ret.push(new Brick(10, 9, 1, false));
    ret.push(new Brick(10, 7, 3, false));
    ret.push(new Brick(9, 7, 3, false));
    ret.push(new Brick(9, 6, 3, false));
    ret.push(new Brick(10, 6, 3, false));
    ret.push(new Brick(0, 0, 0, true));
    ret.push(new Brick(19, 0, 0, true));
    ret.push(new Brick(2, 8, 3, false));
    ret.push(new Brick(16, 9, 0, true));
    ret.push(new Brick(17, 8, 3, false));
    ret.push(new Brick(3, 9, 0, true));
    ret.push(new Brick(5, 10, 2, false));
    ret.push(new Brick(0, 4, 2, false));
    ret.push(new Brick(1, 4, 1, false));
    ret.push(new Brick(2, 4, 0, true));
    ret.push(new Brick(3, 4, 2, false));
    ret.push(new Brick(4, 4, 2, false));
    ret.push(new Brick(5, 4, 3, false));
    ret.push(new Brick(6, 4, 0, true));
    ret.push(new Brick(7, 4, 1, false));
    ret.push(new Brick(8, 4, 1, false));
    ret.push(new Brick(9, 4, 0, true));
    ret.push(new Brick(11, 4, 1, false));
    ret.push(new Brick(12, 4, 1, false));
    ret.push(new Brick(13, 4, 0, true));
    ret.push(new Brick(14, 4, 3, false));
    ret.push(new Brick(15, 4, 2, false));
    ret.push(new Brick(16, 4, 2, false));
    ret.push(new Brick(17, 4, 0, true));
    ret.push(new Brick(18, 4, 1, false));
    ret.push(new Brick(19, 4, 2, false));
    ret.push(new Brick(10, 4, 0, true));
    ret.push(new Brick(3, 3, 2, false));
    ret.push(new Brick(16, 3, 2, false));
    ret.push(new Brick(9, 2, 0, true));
    ret.push(new Brick(10, 2, 0, true));

    return ret;
}

// Paddle
function makeLevel3()
{
    var ret = [];
    ret.push(new Brick(2, 9, 0, true));
    ret.push(new Brick(4, 9, 0, true));
    ret.push(new Brick(5, 9, 0, true));
    ret.push(new Brick(8, 9, 0, true));
    ret.push(new Brick(10, 9, 0, true));
    ret.push(new Brick(12, 9, 0, true));
    ret.push(new Brick(16, 9, 0, true));
    ret.push(new Brick(15, 9, 0, true));
    ret.push(new Brick(14, 9, 0, true));
    ret.push(new Brick(13, 9, 0, true));
    ret.push(new Brick(11, 9, 0, true));
    ret.push(new Brick(9, 9, 0, true));
    ret.push(new Brick(7, 9, 0, true));
    ret.push(new Brick(6, 9, 0, true));
    ret.push(new Brick(3, 9, 0, true));
    ret.push(new Brick(2, 8, 0, true));
    ret.push(new Brick(3, 8, 0, true));
    ret.push(new Brick(4, 8, 0, true));
    ret.push(new Brick(5, 8, 0, true));
    ret.push(new Brick(6, 8, 0, true));
    ret.push(new Brick(7, 8, 0, true));
    ret.push(new Brick(10, 8, 0, true));
    ret.push(new Brick(9, 8, 0, true));
    ret.push(new Brick(8, 8, 0, true));
    ret.push(new Brick(11, 8, 0, true));
    ret.push(new Brick(12, 8, 0, true));
    ret.push(new Brick(13, 8, 0, true));
    ret.push(new Brick(14, 8, 0, true));
    ret.push(new Brick(15, 8, 0, true));
    ret.push(new Brick(16, 8, 0, true));
    ret.push(new Brick(9, 3, 3, false));
    ret.push(new Brick(10, 3, 3, false));
    ret.push(new Brick(10, 2, 3, false));
    ret.push(new Brick(9, 2, 3, false));
    ret.push(new Brick(17, 9, 0, true));
    ret.push(new Brick(17, 8, 0, true));

    return ret;
}

// Head
function makeLevel4()
{
    var ret = [];
    ret.push(new Brick(8, 13, 1, false));
    ret.push(new Brick(11, 13, 1, false));
    ret.push(new Brick(12, 12, 0, true));
    ret.push(new Brick(13, 11, 1, false));
    ret.push(new Brick(13, 10, 1, false));
    ret.push(new Brick(13, 9, 1, false));
    ret.push(new Brick(13, 8, 1, false));
    ret.push(new Brick(13, 7, 1, false));
    ret.push(new Brick(13, 5, 1, false));
    ret.push(new Brick(13, 6, 1, false));
    ret.push(new Brick(13, 4, 1, false));
    ret.push(new Brick(12, 3, 1, false));
    ret.push(new Brick(11, 3, 1, false));
    ret.push(new Brick(10, 3, 1, false));
    ret.push(new Brick(9, 3, 1, false));
    ret.push(new Brick(8, 3, 1, false));
    ret.push(new Brick(7, 12, 0, true));
    ret.push(new Brick(6, 11, 1, false));
    ret.push(new Brick(6, 10, 1, false));
    ret.push(new Brick(6, 9, 1, false));
    ret.push(new Brick(6, 8, 1, false));
    ret.push(new Brick(6, 7, 1, false));
    ret.push(new Brick(6, 6, 1, false));
    ret.push(new Brick(6, 5, 1, false));
    ret.push(new Brick(6, 4, 1, false));
    ret.push(new Brick(9, 13, 1, false));
    ret.push(new Brick(10, 13, 1, false));
    ret.push(new Brick(7, 3, 1, false));
    ret.push(new Brick(13, 3, 0, true));
    ret.push(new Brick(13, 2, 3, false));
    ret.push(new Brick(6, 3, 0, true));
    ret.push(new Brick(6, 2, 3, false));
    ret.push(new Brick(8, 6, 0, true));
    ret.push(new Brick(11, 6, 0, true));
    ret.push(new Brick(9, 10, 0, true));
    ret.push(new Brick(10, 10, 0, true));
    ret.push(new Brick(16, 11, 2, false));
    ret.push(new Brick(17, 10, 2, false));
    ret.push(new Brick(18, 9, 2, false));
    ret.push(new Brick(15, 5, 3, false));
    ret.push(new Brick(16, 4, 3, false));
    ret.push(new Brick(17, 3, 3, false));
    ret.push(new Brick(4, 5, 3, false));
    ret.push(new Brick(3, 4, 3, false));
    ret.push(new Brick(2, 3, 3, false));
    ret.push(new Brick(3, 10, 2, false));
    ret.push(new Brick(2, 9, 2, false));
    ret.push(new Brick(1, 8, 2, false));
    ret.push(new Brick(0, 0, 3, false));
    ret.push(new Brick(19, 0, 3, false));

    return ret;
}

// V shape
function makeLevel5()
{
    var ret = [];
    ret.push(new Brick(0, 0, 2, false));
    ret.push(new Brick(1, 1, 2, false));
    ret.push(new Brick(2, 2, 2, false));
    ret.push(new Brick(5, 5, 2, false));
    ret.push(new Brick(6, 6, 2, false));
    ret.push(new Brick(7, 7, 2, false));
    ret.push(new Brick(8, 8, 2, false));
    ret.push(new Brick(19, 0, 2, false));
    ret.push(new Brick(18, 1, 2, false));
    ret.push(new Brick(17, 2, 2, false));
    ret.push(new Brick(14, 5, 2, false));
    ret.push(new Brick(13, 6, 2, false));
    ret.push(new Brick(12, 7, 2, false));
    ret.push(new Brick(11, 8, 2, false));
    ret.push(new Brick(8, 9, 1, false));
    ret.push(new Brick(7, 9, 1, false));
    ret.push(new Brick(6, 9, 1, false));
    ret.push(new Brick(5, 9, 1, false));
    ret.push(new Brick(3, 9, 0, true));
    ret.push(new Brick(2, 9, 0, true));
    ret.push(new Brick(1, 9, 1, false));
    ret.push(new Brick(0, 9, 1, false));
    ret.push(new Brick(4, 9, 1, false));
    ret.push(new Brick(12, 9, 1, false));
    ret.push(new Brick(11, 9, 1, false));
    ret.push(new Brick(13, 9, 1, false));
    ret.push(new Brick(14, 9, 1, false));
    ret.push(new Brick(15, 9, 1, false));
    ret.push(new Brick(17, 9, 0, true));
    ret.push(new Brick(19, 9, 1, false));
    ret.push(new Brick(18, 9, 1, false));
    ret.push(new Brick(16, 9, 0, true));
    ret.push(new Brick(12, 8, 0, true));
    ret.push(new Brick(13, 7, 0, true));
    ret.push(new Brick(14, 6, 0, true));
    ret.push(new Brick(17, 3, 0, true));
    ret.push(new Brick(18, 2, 0, true));
    ret.push(new Brick(19, 1, 0, true));
    ret.push(new Brick(7, 8, 0, true));
    ret.push(new Brick(6, 7, 0, true));
    ret.push(new Brick(5, 6, 0, true));
    ret.push(new Brick(2, 3, 0, true));
    ret.push(new Brick(1, 2, 0, true));
    ret.push(new Brick(0, 1, 0, true));
    ret.push(new Brick(0, 10, 3, false));
    ret.push(new Brick(1, 10, 3, false));
    ret.push(new Brick(3, 10, 3, false));
    ret.push(new Brick(4, 10, 3, false));
    ret.push(new Brick(5, 10, 3, false));
    ret.push(new Brick(6, 10, 3, false));
    ret.push(new Brick(8, 10, 3, false));
    ret.push(new Brick(9, 10, 3, false));
    ret.push(new Brick(10, 10, 3, false));
    ret.push(new Brick(11, 10, 3, false));
    ret.push(new Brick(14, 10, 3, false));
    ret.push(new Brick(13, 10, 3, false));
    ret.push(new Brick(15, 10, 3, false));
    ret.push(new Brick(16, 10, 3, false));
    ret.push(new Brick(18, 10, 3, false));
    ret.push(new Brick(19, 10, 3, false));
    ret.push(new Brick(8, 2, 0, true));
    ret.push(new Brick(9, 2, 0, true));
    ret.push(new Brick(10, 2, 0, true));
    ret.push(new Brick(11, 2, 0, true));
    ret.push(new Brick(9, 1, 3, false));
    ret.push(new Brick(10, 1, 3, false));

    return ret;
}